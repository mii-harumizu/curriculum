IT基本用語まとめ

●IT

・IT

「Information Technology」
パソコンやスマートフォンなどの情報技術の総称
パソコンやインターネットを表すだけではなくセキュリティや情報処理なども含む
広義の意味で利用される

●OS

・OS

「Operation System」
アプリやデバイスを動作させるための基本となるソフトウェアのこと。
キーボードやマウス・タッチパッドなどのデバイスから入力した情報を
アプリケーションに伝え、ソフトウェアとハードウェアの連携をつかさどる中枢的な役割を果たす

・Windows

マイクロソフト社が開発したOS
Windowsは窓、つまりウィンドウを開いて操作することが語源になっている

・macOS (Mac OS X)

Aplle社が開発したOS
直感的に捜査を行うことができるGUIが特徴的でマルチメディアやDTPに関する質の高い
アプリケーションソフトが豊富
（Mac OS Xは2001年3月に発売されたバージョンの名称。従来のモデルと異なり、
OSの土台となるカーネル部分に「Darwin」というBSD系のOSが採用。高い安定性を保つことが
可能になっている。コマンドラインやマルチユーザーにも対応している。たびたびバージョンアップが
行われており、バージョンの区別の際には開発コードを記載している）

・UNIX
現存する最も古いOSの一つ
様々なOSの土台となっており、余計な機能が少ない為軽く、動作が安定している。
WEBサーバーの殆どがUNIX系である。


・LINUX
開発当初はパソコン用のOSであったが
今ではスーパーコンピューターやサーバー、組み込みシステム(携帯電話やテレビなど)
大小さまざまなシステムで利用されている
WEBアプリなどを公開する際に借りるVPSにインストールできる標準的なOS

●言語・環境

・HTML
WEBページを作る為の基本的なマークアップ言語のひとつ

・CSS
ウェブページのスタイルを指定するための言語

・MySQL
データベースの管理システム
非商用利用であれば無償で使用可能。

・PHP
動的にWEBページを生成することができるサーバーサイドスクリプト言語

・JavaScript
動的にコンテンツを更新したり、マルチメディアを管理したり、その他多くのことができるスクリプト言語

・jQuery
JavaScriptでできることを、より簡単な記法で実現できように設計されたJavaScriptライブラリ

・Apache
Webサーバーソフトウェア(HTTPサーバー)サーバーを構築するにはWebサーバーソフトウェアが必要

・Bootstrap
BootstrapはTwitter社が開発したCSSのフレームワーク
レスポンシブなWEBデザインに対応している

●エンジニアなど

・SE
システムエンジニア
顧客の要求から使用を決定し、大まかな設計をするまでの
情報システム開発における上流工程を担当する。
予算や人員、進捗管理などのマネジメントも行う

・PG
プログラマ
SEが作成した設計書に沿ったプログラミングを行う
システム開発における製造工程を担当

・WEBデザイナー
クライアントから依頼されたWEBサイトのデザインを担当する

●ユーザーインターフェース

・CUI
キーボードに入力されるコマンドによってOSの操作を行う

・GUI
コンピューターへ出す命令や指示がユーザーが画面上で視覚的に捉えて行動を指定できるもの
直感的に操作ができる

●ファイルとディレクトリ

・ファイル
写真や動画、テキストなどのまとまりを持った一つ一つのデータのこと

・ディレクトリ
ファイルの目的や種類などに応じて整理して保管しておく
WindowsやMacではフォルダとも呼ばれている

・ルートディレクトリ
階層型ファイル構造の最上階層のディレクトリ

・カレントディレクトリ
現時点で作業を行っているディレクトリの事

・パス
ファイルやフォルダが置いてある場所を指す

・絶対パス
パスの表記法の一つ、階層構造の頂点からの位置関係を記述する

・相対パス
ファイルの位置指定をカレントディレクトリを起点として
相対的に記述する手法
比較的簡単に記述できるが他サーバー上のファイルを指定できないという難点がある

●各種プロトコル

・HTTP
WEBブラウザとWEBサーバの間でHTMLなどのコンテンツの送受信用に利用される通信プロトコル

・FTP
ファイル転送プロトコル
主にWEBページの公開時に使用され、作成したHTMLなどのファイルをサーバーにアップした更新する際に利用

・HTTPS
HTTPがSSLやTLSで暗号化されている状態を示したもの
通信経路上での盗聴や第三者によるなりすましを防止

・SSL
インターネットなどのTCP/IPネットワークでデータを暗号化して送受信するプロトコル

・SSH
主にUNIXコンピューターで利用される、ネットワークを介して別のコンピューターに
ログインして操作するためのソフトウェアの一つ
通信経路が暗号化されているのでインターネットなどを経由しても安全にアクセスすることができる

・ポート、ポート番号
TCP/IPにおいて同じコンピューター内で動作する複数のソフトウェアのどれが通信するか指定するための番号

・HTTP、FTP、SSHの各ポート番号

　HTTP:80
  FTP :20
  SSH :22

・ファイアウォール
コンピューターやネットワークと外部ネットワークの境界に設置され、内外の通信を中継・監視して外部の攻撃から内部
を保護するソフトウェアや機器、システムのこと

・TCP
コネクション型のプロトコルで
通信相手の状況を確認して接続を確率して、データの伝送が終わるという手順を踏む
相手が確実にデータを受け取ったか、データの欠落や破損を検知して再送したり、届いたデータを送信順に並べなおしたりといった制御をおこなう

●IPアドレス

・IPアドレス
インターネット上に接続された機器に割り当てられる固有の番号のこと

・グローバルIPアドレス
インターネットで相手と通信をするために持つ。
他のアドレスと重複しない一意のIPアドレス。

・プライベートIPアドレス
LANなどの企業内ネットワークに存在する端末が使用するIPアドレス。
自ネットワーク内では一意であるが他のネットワークでは重複している可能性がある

●ドメイン

・ドメイン
インターネット上の住所を示すもの

・DNS
ドメインネームサーバー
ドメイン名やホスト名とIPアドエスの対応関係を管理するシステム。

・VPN
通信事業者の公衆回線を経由して構築された仮想的な組織内ネットワーク。
仮想的に構築された専用ネットワークを暗号化などの技術で安全な通信回線として実現し、
提供する方法。

・ブリッジ
ネットワーク中のデータの中にあるMACアドレスを参照して、送信先が接続されているポートにのみデータを転送する

・プロキシサーバ
インターネットに直接接続できないコンピュータに河内、インターネットに接続し
WEBサイトへのアクセスなどをおこなうサーバーを指す

●電子メール

・SMTP
メールを送信するための通信プロトコルの一つ

・POP
メールを受信するためのプロトコルの一つ
利用者が自分あての電子メールを保管しているメールサーバにアクセスしてメールを取りだす

・IMAP
メールを受信するためのプロトコルの一つ
利用者が自分あての電子メールを保管しているメールサーバにアクセスしてメールを取りだす
POPとの違いはサーバ上でアカウントごとに振り分けられや領域でメールを管理するのがIMAP
POPはメールソフト内で管理する

●セッションとクッキー

・セッション
接続が確立してから切断するまでの一連の通信のこと
HTTPのサイトではセッションにIDを割り振ることで同一のセッションを管理することができる

・クッキー
ホームページを訪問したユーザーの情報を一時的に保存する仕組み、またはそのデータ
IDやPASS、メールアドレスや訪問回数などがユーザー情報として保存されます。

・キャッシュ
データを一時的に保存することデータ処理速度を速める仕組み

●DB（データベース）について

・チューニング
性能の悪いSQLを発見してその処理過程を改善すること
目的の処理結果を変えずにその過程を最適化する

・スロークエリ
時間のかかっているSQLのこと

・インデックス
テーブルの情報を探すときに検索の対象としてよく使用する
カラムの値だけを取り出して検索しやすいようにしておいたもの

●テストについて

・フロー
計画を立ててからテスト環境を準備
項目の作成やデータの準備、手順を確認したあとに
単体テスト⇒結合テスト⇒システムテスト

・単体テスト
作成したプログラム一つずつを単体でテストして正常に動作するかを検証して
個々のモジュールについての機能や性能、運用性のチェック

・結合テスト
単体テストで確認した複数のモジュールを組み合わせて不具合がないか確認する
小さな結合から大きな結合まで段階的に実施

●チケット管理ツール

・チケット管理ツール
タスクをチケットとして管理する方法
発生日や作業内容、優先度、担当者や期日を登録して管理
チケットの発行・処理枚数によってプロジェクト全体の状況を把握する手段

・タスク
プロジェクトを達成するための業務をタスク
タスクを一つ一つ完了させることでプロジェクトを達成させる

●バージョン管理

・Git
オープンソースの分散バージョン管理システムの一つ。
複数の開発者が共同で一つのソフトウェアを開発するさいなどに
ソースコードやドキュメントなどの編集履歴を統一的に管理する

・SourceTree
バージョン管理システムのGUI

・SVN
「Subversion」
オープンソースのバージョン管理システム
複数の開発者が共同で一つのソフトウェアを開発するさいなどに
ソースコードやドキュメントなどの編集履歴を統一的に管理する

・コンフリクト
複数人で作業している際に
同じ個所を別々のブランチで、別の変更をかけているのにマージしてしまうことによって発生
二つの分岐で不整合がおきる

・デグレ(デグレード)
新しいバージョンのソフトウェアの品質が以前よりも悪くなること
以前修正した不具合やバグが再発、復活すること
新しいファイルなどをふるい内容で上書きしてしまい
更新内容が失われることを指す場合もある

・マージツール
複数のファイルを比較、マージ、及びフォルダの同期を行う

●その他

・ロジック
プログラミングを処理するための内容や手順のことを指す
目的のたｍに必要な動作の流れを決めることはロジックを組むと呼ばれる

・デバッグ
プログラムなどのバグや欠陥を発見し修正、動作を仕様通りのものとするための作業

・開発手法(ウォーターフォール開発、アジャイル開発)
ウォーターフォール開発：開発作業を複数の工程に分け、各工程の成果をドキュメントにまとめながら次の工程へ進み
開発を行うこと。上流から下流へ水が流れ落ちるように開発する。

アジャイル開発：大きな単位でシステムを区切ることなく、小単位で実装とテストをくり返して
開発を進めていく。開発期間が短い。

・アルゴリズム
問題解決にいたるやり方や考え方のこと
(プログラムの形で与えて実行させることができるよう定型化された、処理手順の集合)

・フローチャート図
工程や手順の流れを図示する手法の一つで、個々の段階を箱で表し、
それらを順序や論理の推移に従って矢印や線分で結んだもの

・設計書(外部設計、内部設計)

-外部設計：
システム開発工程の一つ
外部から見たシステムの仕様を定義する工程(操作画面や操作方法、データ出力などのユーザーから見える
インターフェースの部分の仕様を決定したり、セキュリティや運用規定、システム開発スケジュールや費用
などを設計したりなども)
-内部設計：
外部設計を基にシステム内部の動作や機能、物理データなどユーザーから見えにくい詳細な
部分の設計を行う
プログラム機能を単体に分割してそこで使用する物理データや入出力を設計する

・要件定義(要求仕様書)

システムやソフトウェアの開発で実装すべき機能や満たすべき性能などを明確にしていく作業のこと

・システム開発におけるテスト(単体テスト、結合テスト、総合テスト)

-単体テスト：
単一機能の不具合を検出する
-内部結合テスト
サブシステム内の機能連携による不具合を検出する
-外部結合テスト
サブシステム間(もしくは他システム間)との機能連携による不具合を検出する
-総合テスト
要件定義書に対して、構築したシステムの不備を検出する

・テスト仕様書(どのようなもの、項目)
テスト計画とテスト設計を実施後に作成する

「テスト計画」
どんなテストをするのか（テストの種類）機能テスト、セキュリティテストや負荷テスト
どこまで担保するのか
テストを中止する場合や再開する基準は（実施環境の設定不備）
実行環境の確認
テスト結果（「OK」はどこまでの範囲か、「NG」はどこからなどを決める）
テストツールは使用するのか（使用する場合は、対象案件での使用メリットも記載）
全体のスケジュール（定例MTGや、各テストの期間、実施担当者）
組織図
どのようなテストデータを用意するか
仕様変更や、FIX決めの対応
テストリスク（リスク発生頻度、重大度）と対策事項（リスクレベルの設定）はまとめているか

「テスト設計」
仕様書からよみとれるレベル
内部構造を理解して設計するレベル
テスト経験者の間や知識から実行する探索的テスト

「テスト仕様書」
設計書を基にテストケースをおこす
無駄なケースがないかを確認する。
前提条件を必ず記載
大項目、中項目、小項目、前提条件、操作方法を記載
テスターは
期待値が実測値とあっているかを確認し、テスト結果を「OK」「NG」「PN」で記載。また、不具合管理票も記載。
「OK」は、期待値と実測値が同じである
「NG」は、期待値と実測値が異なっている
「PN」は、テスト環境不備やテストケース自体実行できない場合

・バリデーション

対象がその仕様や文法などに照らして適切に記述・構築されているか否かを検証すること

・FW（フレームワーク）

プログラムのひな型、システム開発を効率化してくれる機能群
アプリケーションの土台として機能するソフトウェアのこと
または汎用的に適用できるプログラムの設計モデルや典型的な処理パターン

・PHPのFW（フレームワーク）の種類と特徴

-Laravel
特徴は簡単なアプリケーションを自動生成できる
数行のコードでTODOリストの作成など

-CakePHP
特徴は動作速度が速く素早く快適に開発できる

-Phalcon(ファルコン)
特徴はC言語の拡張なので非常に高速で動作する

-CodeIgniter(コードイグナイター)
特徴はコーディング規約の制限が緩く、自由度が高いフレームワーク

-FuelPHP(フューエル)
特徴はシンプルでフレキシブルをテーマにしていて小規模案件向け
オートローダーという機能で必要なクラスだけを取り込む仕組み

-Yii(イー)
特徴は軽量なキャッシュ機能があり、アクセス負荷が大きいサービスでの使用に適している

・Ajax

あるWEBページを表示した状態のまま、別のページや再読み込みを伴わずに
WEBサーバー側と通信を行い、動的に表示内容を変更する手法
JavaScriptの拡張機能を用いる

・API

アプリケーション・ソフトウェアとプログラムをつなぐもの

・LAMP

LINUX＋Apache＋MYSQL＋PHP(perlもしくはPython)のセットである

・クラウドサーバー、レンタルサーバー、VPSの違い

レンタルサーバーは共有サーバーが一般的で、サーバーリソースをシェアして利用するため、低コストでの運用が
VPSは一台のサーバーを複数のユーザーで共用で利用する点は同じだが、仮想的に（決められた領域内で）専用サーバーと似た自由度・性能を利用することができる
クラウドサーバーはインターネットを介してブラウザ上で機能を利用できるサービス。クラウド事業者と契約すればすぐにサービスを利用することができる手軽さと、例えばアクセスが集中した際に
は拡張、減少したら収束など臨機応変な運用ができるため、コストカットが期待できる


・AWS

AmazonWebServicesの略
クラウド市場の3割程度のシェアを誇っていてシェア率トップ
仮想サーバ(EC2)、データベース（RDS）、ストレージ（S3）などがある

・プラットフォーム

機器やソフトウェアを動作させるのに必要な基盤となる装置やソフトウェア、サービス、あるいはそれらの組み合わせのこと

・カバレッジ

所定の網羅条件がテストによってどれだけ実行されたのかを割合で表したもの。


・エビデンス

最終検証段階においてシステムが発注通りに動作していることを示す証拠となる書類やデータなどのこと
稼働中の画面を印刷したものやシステムによって生成されたデータファイル、外部の別のシステムが受信したデータなどが用いられることが多い

・コンパイル

プログラミング言語で書かれたソースコードをコンピュータ上で実行可能なオブジェクトコードに変換すること

・バッチ処理

あらかじめ登録した一連の処理を自動的に実行する処理方式を指す
複数のプロぐr撫養ファイル転送コマンドなどの実行順序を定義して大量のデータを一括処理する

・デプロイ(意味と方法、FTPソフトの種類)

開発した機能やサービスを利用できる状態にする作業を指す（サーバーを止めてから実施）
作成したプログラムをサーバーにアップロードして、サーバー環境で利用可能にする。
ただし、テスト用環境へアップロードしてテストに使える状態にすることもデプロイと呼ぶので注意。

-FTPソフト種類
　FFFTP（Windows）
　Cyberduck（mac）
　FileZilla
　FTP Rush
など
上記のFTPクライアントという専用ソフトを利用して、サーバーへのファイルのデプロイを行う

・データベース接続クライアント(説明、代表的なもの)

データベース管理システムや換気データベース管理システム上のデータを容易に扱うためのソフトウェア

-データベース接続クライアント
　DBeaver
　A5:SQL Mk-2
　HeidiSQL


・Gitホスティングサービス(説明、代表的なもの)

Gitの利用者（開発者)を支援するサービス

-代表的なホスティングサービス
　GitHub
  Bitbucket
  GitLab
  CloudForge

・チケット管理ツール(説明、代表的なもの)

タスク管理ツール

-代表的なサービス
　Wrike
  Redmine
  Backlog
　Trello


・DBのJOINとは

テーブル結合の事
複数のテーブルを結合する
内部結合、左外部結合、右外部結合、完全外部結合、交差結合がある

・SEO

Search Engine Optimization
検索エンジン最適化
WEBコンテンツのテキストや構成を工夫することで、検索エンジンの検索結果ページの上位にサイトを表示する
